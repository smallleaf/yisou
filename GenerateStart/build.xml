<?xml version="1.0" encoding="UTF-8" ?>
<project name="package" default="default" basedir="." xmlns:artifact="urn:maven-artifact-ant">
	<description>项目打包</description>

	<path id="maven-ant-tasks.classpath" path="D:/maven/ant/lib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />
	
	<!--加入标签-->
	<path id="maven-ant-trib.classpath" path="D:/maven/ant/lib/ant-contrib-1.0b3.jar" />
		<typedef resource="net/sf/antcontrib/antcontrib.properties"  classpathref="maven-ant-trib.classpath" />
	<!--读取pom中的配置-->
	<xmlproperty file="pom.xml"/>
	
	<if>
		<isset property="${project.packaging}" />
		<else>
			<property name="project.packaging" value="jar" />
		</else>
	</if>
	
	
	<property environment="env" />
	<property file="build.properties" />
	<!--项目最终打包的名字-->
	<property name="final.name" value="${project.artifactId}-${project.version}.jar" />
	
	<property name="target.dir" value="target" />
	<property name="src.dir" value="src/main/java">
	</property>
	<property name="build.dir" value="${target.dir}/ant/classes">
	</property>
	<property name="dist.dir" value="${target.dir}/target/dist/${project.artifactId}/${project.version}">
	</property>

	<property name="local.dir" value="${localDir}/${project.artifactId}/${project.version}"></property>
	<property name="config.dir" location="src/main/resources" />
	<property name="doc.dir" location="${target.dir}/ant/javadoc" />
	<property name="web.root" location="src/main/webapp" />

	<property name="lib.dir" location="${target.dir}/target/lib" />
	<property name="libraries.dir" location="../${libraries.project}/lib" />
	<property name="test.dir" location="src/test/java" />
	
	
	<artifact:pom id="maven.project" file="pom.xml" />
	<artifact:dependencies filesetId="deps.fileset.compile" useScope="compile">
		<pom refid="maven.project" />
	</artifact:dependencies>
	
	
	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	<target name="delete" description="删除文件夹">
		<delete dir="${target.dir}">
		</delete>
	</target>

	<target name="makedir" description="建立文件夹" depends="delete">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${lib.dir}"/>
		<mkdir dir="${test.dir}"/>
		<mkdir dir="${local.dir}"/>
	</target>

	<!--下载jar包-->
	<target name="download-libs" depends="makedir">
		<copy todir="${lib.dir}">
			<fileset refid="deps.fileset.compile" />
			<mapper type="flatten" />
		</copy>
	</target>

	<target name="compile" depends="download-libs" description="编译代码">
		<javac srcdir="${src.dir}"
	               destdir="${build.dir}"
	               encoding="UTF-8"
	               includeantruntime="no"
	               excludes="**/test/*,**/test/bean/*,**/*.svn,*.svn"
	               includes="**/*.java"
	               source="1.7"
	               target="1.7"
	               deprecation="true"
	               failonerror="true"
	               debug="true">
			<classpath refid="compile.classpath" />
		</javac>

		<!-- 把所有文件copy到build目录 -->
		<copy todir="${build.dir}">
			<fileset dir="${config.dir}" includes="**/*"/>
		</copy>
	</target>

	<!--生成Javadoc 文档 -->
	<target name="javadoc" description="生成Javadoc文档.">
		<delete dir="${doc.dir}"/>
		<mkdir dir="${doc.dir}"/>
		<javadoc destdir="${doc.dir}" windowtitle="${project} Javadoc" use="yes"
	                 linksource="no" splitindex="yes" encoding="UTF-8"
	                 docencoding="UTF-8" locale="zh_CN">
			<classpath refid="classpath"/>
			<packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="${domain}/${package}/**"/>
			</packageset>
		</javadoc>
	</target>

	<target name="package" depends="compile" description="打包成Jar" >
		<mkdir dir="${dist.dir}" />
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss"/>
			<format property="TIME" pattern="yyMMddHHmm"/>
		</tstamp>


		<!-- 打包所有的编译文件 -->
		<jar jarfile="${dist.dir}/${final.name}"
	             basedir="${build.dir}" >
		</jar>

		<!-- 把jar copy到指定备份目录 -->
		<copy todir="${local.dir}">
			<fileset dir="${dist.dir}" includes="${final.name}"/>
		</copy>
		<!-- 把jar copy到指定备份目录 -->
		<copy todir="${projectDir}">
			<fileset dir="${dist.dir}" includes="${final.name}"/>
		</copy>
		
		<copy todir="${projectDir}/lib">
			<fileset dir="${lib.dir}">
					<include name="*.jar" />
			</fileset>
		</copy>
		<!-- 生成Web配置及部署文件 
	        <war destfile="${dist.dir}/${project.artifactId}-${project.version}.war"
	             webxml="${web.root}/WEB-INF/web.xml">
	            <fileset dir="${web.root}" excludes="${web.root}/WEB-INF/classes/*"></fileset>
	            <classes dir="${build.dir}" />
	            <lib dir="${lib.dir}" includes="**/*.jar" />
	        </war> 
			-->
		<!--
	          <jar jarfile="${dist.dir}/${version}/${domain}.${package}.${project}.client.bin.${version}.v${TIME}.jar"
	               basedir="${client.build.dir}" manifest="${web.root}/META-INF/MANIFEST.MF">
	          </jar>
	          <jar jarfile="${dist.dir}/${version}/${domain}.${project}.sources.${version}.jar"
	               basedir="${src.dir}" manifest="${web.root}/META-INF/MANIFEST.MF">
	          </jar>
	          <jar jarfile="${dist.dir}/${version}/${domain}.${project}.testsource.${version}.jar"
	              basedir="${test.dir}" manifest="${web.root}/META-INF/MANIFEST.MF">
	          </jar>

	          <jar jarfile="${dist.dir}/${version}/${domain}.${project}.javadoc.${version}.jar"
	              basedir="${doc.dir}" manifest="${web.root}/META-INF/MANIFEST.MF"/>
	          -->

	</target>

	<target name="destory" description="最后的清理" >
		<delete  includeemptydirs="true">
			<fileset dir="${build.dir}" includes="**/*" />
		</delete>
	</target>
	<target name="default" depends="package, destory">

	</target>
</project>